@{

    Layout = null;
}
@{
    string selectid = ViewBag.selectid;
    int delay = 2;
    int minimumInputLength = 0;
    bool isReadOnly = ViewBag.isReadOnly;

    string strisReadOnly = isReadOnly.ToString().ToLower();

    bool isRequired = ViewBag.isRequired;


    string placeholder = ViewBag.placeholder;
    string ddlcss = ViewBag.ddlcss;


    if (isRequired == true)
    {
    <select name="@selectid" id="@selectid" selectedvalue="@ViewBag.data" class="form-control @selectid @ddlcss" style="width:100%;display:block;box-sizing:border-box"
                    data-val="true" data-val-required="Please Select">
                <option>@placeholder</option>
    </select>
    <span class="field-validation-valid text-danger" data-valmsg-for="@selectid" data-valmsg-replace="true"></span>
    }
    else
    {
    <select name="@selectid" id="@selectid" selectedvalue="@ViewBag.data" class="form-control @selectid @ddlcss" style="width:100%;display:block;box-sizing:border-box">
                <option>@placeholder</option>
    </select>

    }
}



<script type="text/javascript">

    var model_parentid = '@ViewBag.model_parentid';

    function LoadGenItemMasterDropDownByElement(model_parentid, ddl, TechPackID, Item_Structure_Sub_Group_ID) {

        if (TechPackID == null)
            TechPackID = 0;

        var select2Options = returnSelect2Options();
        select2Options.placeholder = '@Html.Raw(ViewBag.placeholder)'.length > 0 ? '@Html.Raw(ViewBag.placeholder)' : 'All Master Category';
        select2Options.minimumInputLength = @minimumInputLength;
        select2Options.multiple = false;
        select2Options.dropdownParent = model_parentid.length > 0 ? $('#' + model_parentid + ' .modal-content') : null,

            select2Options.disabled = @strisReadOnly.ToLower();
        select2Options.ajax.url = '/Select2/GenItemMasterDetailList', select2Options.ajax.type = 'GET';
        select2Options.ajax.processResults = function (data, params) {

            params.page = params.page || 1;

            if (data.data != null) {
                return {
                    results: $.map(data.data, function (obj) {
                        return { id: obj.id, text: obj.text, otherdata: obj.otherData };
                    }),
                    pagination: {
                        more: (params.page * 10) < data.recordstotal
                    }
                }
            };
        }

        select2Options.ajax.data = function (params) {
            return {
                TechPackID: TechPackID,
                Item_Structure_Sub_Group_ID: Item_Structure_Sub_Group_ID,
                pageSize: 10,
                pageNum: params.page || 1,
                searchTerm: params.term || null
            };
        };

        $(ddl).select2(
            select2Options
        );

        if ($(ddl).attr("selectedvalue")) {

            setTimeout(function () {
               
                $("#" + $(ddl).attr("id")).empty();
                $("#" + $(ddl).attr("id")).append('<option value="' + JSON.parse($(ddl).attr("selectedvalue")).Id + '" selected="selected"">' + JSON.parse($(ddl).attr("selectedvalue")).Text + '</option>');
                $("#" + $(ddl).attr("id")).select2(select2Options);
                $("#" + $(ddl).attr("id")).trigger('change');
            }, 0);

        }

    }

    $(function () {



    });

</script>





