@{

    Layout = null;
}
@{
    string selectid = ViewBag.selectid;
    int delay = 2;
    int minimumInputLength = 0;
    bool isReadOnly = ViewBag.isReadOnly;

    string strisReadOnly = isReadOnly.ToString().ToLower();

    bool isRequired = ViewBag.isRequired;

    bool isOnLoad = (bool)ViewBag.isOnLoad;

    string placeholder = ViewBag.placeholder;
    string ddlcss = ViewBag.ddlcss;


    if (isRequired == true)
    {
        <select selectedvalue="@ViewBag.data" name="@selectid" id="@selectid" class="form-control @selectid @ddlcss" style="width:100%;display:block;box-sizing:border-box"
                data-val="true" data-val-required="Please Select">
            <option>@placeholder</option>
        </select>
        <span class="field-validation-valid text-danger" data-valmsg-for="@selectid" data-valmsg-replace="true"></span>
    }
    else
    {
        <select selectedvalue="@ViewBag.data" name="@selectid" id="@selectid" class="form-control @selectid @ddlcss" style="width:100%;display:block;box-sizing:border-box">
            <option>@placeholder</option>
        </select>

    }
}


<script type="text/javascript">

    var model_parentid = '@ViewBag.model_parentid';

    function RegisterS2ColorByElement(elem) {

        var select2Options = returnSelect2Options();
        select2Options.placeholder = '@Html.Raw(ViewBag.placeholder)'.length > 0 ? '@Html.Raw(ViewBag.placeholder)' : 'All Master Category';
        select2Options.minimumInputLength = @minimumInputLength;
        select2Options.multiple = false;
        select2Options.dropdownParent = model_parentid.length > 0 ? $('#' + model_parentid) : null;
        select2Options.disabled = @strisReadOnly.ToLower();
        select2Options.ajax.url = '/Select2/GenColorDetailList', select2Options.ajax.type = 'GET';
        select2Options.ajax.data = function (params) {
            return {
                pageSize: 10,
                pageNum: params.page || 1,
                searchTerm: params.term || ""
            };
        };
        select2Options.templateResult = function (option) {
            //console.log(option);
            return $(option.textandcolor);

        };
        select2Options.ajax.processResults = function (data, params) {
            params.page = params.page || 1;

            if (data.data != null) {
                return {
                    results: $.map(data.data, function (obj) {
                        return { id: obj.id, text: obj.text, textandcolor: obj.textandcolor };
                    }),
                    pagination: {
                        more: (params.page * 10) < data.recordstotal
                    }
                }
            };
        };

        $(elem).select2(
            select2Options
        );

        if ($(elem).attr("selectedvalue")) {

            $(elem).append('<option value="' + JSON.parse($(elem).attr("selectedvalue")).Value + '" selected="selected"">' + JSON.parse($(elem).attr("selectedvalue")).Text + '</option>');

            $(elem).select2(select2Options);

            $(elem).trigger('change');

        }
    }
</script>

@if (isOnLoad == true)
{


    <script type="text/javascript">

        var model_parentid = '@ViewBag.model_parentid';

        $(function () {

            var select2Options = returnSelect2Options();
            select2Options.placeholder = '@Html.Raw(ViewBag.placeholder)'.length > 0 ? '@Html.Raw(ViewBag.placeholder)' : 'All Master Category';
            select2Options.minimumInputLength = @minimumInputLength;
            select2Options.multiple = false;
            select2Options.dropdownParent = '@ViewBag.model_parentid'.length > 0 ? $('#' + '@ViewBag.model_parentid') : null;
            select2Options.disabled = @strisReadOnly.ToLower();
            select2Options.ajax.url = '/Select2/GenColorDetailList', select2Options.ajax.type = 'GET';
            select2Options.ajax.data = function (params) {
                return {
                    pageSize: 10,
                    pageNum: params.page || 1,
                    searchTerm: params.term || ""
                };
            };
            select2Options.ajax.processResults = function (data, params) {
                params.page = params.page || 1;

                if (data.data != null) {
                    return {
                        results: $.map(data.data, function (obj) {
                            return { id: obj.id, text: obj.text, };
                        }),
                        pagination: {
                            more: (params.page * 10) < data.recordstotal
                        }
                    }
                };
            };


            $('#@selectid').select2(
                select2Options
            );

            if ($('#@selectid').attr("selectedvalue")) {

                $.each(JSON.parse($('#@selectid').attr("selectedvalue")), function (key, val) {

                    $('#@selectid').append('<option value="' + val.Value + '" selected="selected"">' + val.Text + '</option>');

                });

                $('#@selectid').select2(select2Options);
                $('#@selectid').trigger('change');

            }

        });
    </script>
}




