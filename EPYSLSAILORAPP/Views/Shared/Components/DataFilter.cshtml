<div class="card-body" style="margin-top: 10px;background-color: aliceblue;">
    <div class="row">

        <div class="col-md-2" style="width:20%;display:none;">
            <div class="form-group">
                <label class="labelNormal required" style="margin-bottom: 10px!important;font-weight:bold;">Fiscal Year *</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "fiscal_year_id",
                strobjlist =ViewBag.fiscal_year_list!=null? Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)ViewBag.fiscal_year_list)):"",
                selectedvalue = ViewBag.fiscal_year_id,
                cssclass = "form-control",
                enable = false,
                isRequired = true,
                placeholder = "Select Fiscal Year"
                })
            </div>
        </div>
        <div class="col-md-2" style="width:20%;display:none;">

            <label class="labelNormal required" style="margin-bottom: 10px!important;font-weight:bold;">Season Events *</label>

            @await Component.InvokeAsync("GenericDropdownList", new
            {
            ddlId = "event_id",
            strobjlist =ViewBag.event_list!=null? Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)ViewBag.event_list)):"",
            selectedvalue = ViewBag.event_id,
            cssclass = "form-control",
            enable = false,
            isRequired = true,
            placeholder = "Select Fiscal Year"
            })

        </div>
        <div class="col-md-2 filterOption" style="width:20%">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Filter Option</label>

                <select class="form-control" data-val="true" id="ddlFilterOption" name="ddlFilterOption" placeholder="Select Fiscal Year">
                    <option value="">- All Data -</option>
                    <option value="1">Not Added</option>
                    <option value="2">Already Added</option>
                </select>

            </div>
        </div>
        <div class="col-md-2" style="width:20%">
            <div class="form-group">
                <button style="margin-top:30px;" type="button" class="btn btn-primary" id="btnLoadData"><i class="fa fa-plus"></i>&nbsp;Load Data</button>

            </div>
        </div>
        <div class="col-md-2" style="width:20%">
            <div class="form-group">

                @*     <button class="btn btn-primary" type="button" style="width: 180px; float: right;  margin-top: 28px; " onclick="ViewDesignerAssignDetails();">
                View Designer Load
                </button> *@

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2" style="width:20%">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Item Type</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_item_type_id",
                strobjlist =ViewBag.item_type_list!=null? Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)ViewBag.item_type_list)) :"",
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "All Item Type"
                })
            </div>
        </div>
        <div class="col-md-2" style="width:20%">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Product Type</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_product_type_id",
                strobjlist =ViewBag.product_type_list!=null? Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)ViewBag.product_type_list)):"",
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "All Product Type"
                })
            </div>
        </div>
        <div class="col-md-2" style="width:20%">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Gender</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_gender_id",
                strobjlist =ViewBag.gender_list!=null? Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)ViewBag.gender_list)):"",
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "All Gender"
                })
            </div>
        </div>
        <div class="col-md-2" style="width:20%">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Origin</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_item_origin_id",
                strobjlist =ViewBag.origin_list!=null? Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)ViewBag.origin_list)):"",
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "All Origin"
                })
            </div>
        </div>
        <div class="col-md-2" style="width:20%">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Master Category</label>

                @await Component.InvokeAsync("S2MasterCategory", new
                {
                ddlId = "style_master_category_id",
                selectedvalue = "",
                cssclass = "form-control",
                isRequired = false,
                isReadOnly = false,
                placeholder = "All Master Category"
                })
            </div>
        </div>

    </div>
</div>