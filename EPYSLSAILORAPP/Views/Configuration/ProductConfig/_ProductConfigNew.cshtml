@using Newtonsoft.Json;
@model EPYSLSAILORAPP.Domain.DTO.style_item_product_DTO
@{
    Layout = null;
}



 <style>
       .table-responsive {
           max-height: 400px;
           overflow-y: auto;
       }
 </style>

<div class="box" style="border-width:0px;">

    <div class="row">
        <input type="hidden" asp-for="style_item_product_id" />
    
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Product Name</label>

                <input style="width:100%" type="text" asp-for="style_item_product_name" class="border-gray-200 form-control" />

            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Master Category</label>

                @await Component.InvokeAsync("S2MasterCategory", new
                {
                ddlId = "style_master_category_id1",
                selectedvalue = "",
                cssclass = "form-control",
                isRequired = false,
                isReadOnly = false,
                placeholder = "Select Master Category",
                preloaded = "",
                model_parentid = "modalcontainer_common"
                })
            </div>

        </div>
        

    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Item Type</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_item_type_id1",
                strobjlist = Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)Model.style_item_type_List)),
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "Select Item Type"
                })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Product Type</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_product_type_id1",
                strobjlist = Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)Model.style_product_type_List)),
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "Select Product Type"
                })
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Gender</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_gender_id1",
                strobjlist = Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)Model.style_gender_List)),
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "Select Gender"
                })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Origin</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_item_origin_id1",
                strobjlist = Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)Model.style_item_origin_List)),
                selectedvalue = "",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "Select Origin"
                })
            </div>
        </div>
    </div>
   
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="labelNormal " style="margin-bottom: 10px!important;font-weight:bold;">Size Group</label>

                @await Component.InvokeAsync("GenericDropdownList", new
                {
                ddlId = "style_product_size_group_id1",
                strobjlist = Newtonsoft.Json.JsonConvert.SerializeObject(((List<SelectListItem>)Model.style_product_size_group_List)),
                selectedvalue ="",
                cssclass = "form-control",
                enable = true,
                isRequired = true,
                placeholder = "Select Size"
                })
            </div>


            <div class="col-md-6">

                <button id="btnaddRow" class="btn btn-primary" onclick="AddNewRow();">Add Row</button>

            </div>

        </div>

        
    </div>

    <div class="row">

        <div class="col-md-12">
            <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                <table id="DTSubCategory_Delt" class="table table-striped table-bordered" cellspacing="0">
                    <thead>
                        <tr>
                            <th><label class="labelNormal ">SL</label></th>
                            <th><label class="labelNormal ">Sub Category Name</label></th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            
        </div>

    </div>


    <div class="row">
        <div class="col-md-12">
            <button type="button" class="btn btn-primary" id="btnSaveProduct"><i class="fa fa-save"></i>&nbsp;&nbsp;Save</button>
            <button type="button" class="btn btn-danger" id="btnCancel"><i class="fa fa-angle-double-left"></i>&nbsp;Cancel</button>
        </div>
    </div>
</div>

@section Scripts{

    <script>
        $(function () {


        });
    </script>
}
